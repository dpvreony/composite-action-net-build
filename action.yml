name: '.NET Core'
description: '.NET Core standard build workflow'
runs : "composite"
# you need to set up the following as they not supported in a composite action
# * check out code
# * setup netcore 3.1
# * setup net5
steps:
#   - name: Checkout code
#     uses: actions/checkout@v2
#     with:
#       fetch-depth: 0

#    - name: Setup .NET Core 3.1
#      uses: actions/setup-dotnet@v1
#      with:
#        dotnet-version: 3.1.x

#    - name: Setup .NET 5
#      uses: actions/setup-dotnet@v1
#      with:
#        dotnet-version: 5.0.x

#    - name: Add MSBuild to PATH
#      uses: glennawatson/setup-msbuild@v1.0.3

#    - name: NBGV
#      id: nbgv
#      uses: dotnet/nbgv@master
#      with:
#        setAllVars: true

    - name: Install dotnet tools
      run: |
        dotnet tool install --global dotMorten.OmdGenerator
        dotnet tool install --global ConfigValidate
        dotnet tool install --global dotnet-outdated-tool
        dotnet tool install --global snitch
        dotnet tool install --global dotnet-sonarscanner
        dotnet tool install --global JetBrains.ReSharper.GlobalTools
        dotnet tool install --global dotnet-validate --version 0.0.1-preview.169

    - name: Prepare Artifact Directory
      run: |
        mkdir artifacts
        mkdir artifacts\nupkg
        mkdir artifacts\outdated
        mkdir artifacts\snitch
        mkdir artifacts\omd
        mkdir artifacts\docfx

    - name: Restore Packages
      run: |
        dotnet restore ${{ env.solutionpath }} /bl:artifacts\\binlog\\restore.binlog

    - name: Run Build
      run: msbuild /t:build /maxcpucount /p:NoPackageAnalysis=true /verbosity:minimal /p:Configuration=Release
      working-directory: src

    - name: Run Unit Tests
      run: |
        dotnet test ${{ env.unittestprojectpath }} --configuration Release --no-build /bl:artifacts\\binlog\\unittest.binlog --nologo --blame-hang-timeout 60000 --results-directory artifacts\opencover --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover

#    - name: Upload Code Coverage
#      shell: bash
#      run: |
#        echo $PWD
#        bash <(curl -s https://codecov.io/bash) -X gcov -X coveragepy -t ${{ env.CODECOV_TOKEN }} -s '$PWD/artifacts/opencover' -f '*.xml'
#      env:
#        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Produce Nuget Packages
      run: msbuild /t:pack /nowarn:MSB4011 /maxcpucount /p:NoPackageAnalysis=true /verbosity:minimal /p:Configuration=Release /p:PackageOutputPath=..\..\artifacts\nuget /p:ContinuousIntegrationBuild=true
      working-directory: src

    - name: List outdated packages
      run: |
        dotnet outdated -o artifacts\outdated\outdated.json src

    - name: Run Resharper Duplicate Code Finder
      run: |
        jb dupfinder ${{ env.solutionpath }} -o=artifacts\dupfinder\report.xml

# only store binlog on failure
#    - name: store binlogs
#      if: ${{ failure() }}
#      uses: actions/upload-artifact@v2
#      with:
#        name: binlogs
#        path: artifacts/binlog

#    - name: store docfx
#      uses: actions/upload-artifact@v2
#      with:
#        name: docfx
#        path: artifacts/docfx

#    - name: store nuget packages
#      uses: actions/upload-artifact@v2
#      with:
#        name: nuget
#        path: artifacts/nuget

#    - name: store omd
#      uses: actions/upload-artifact@v2
#      with:
#        name: omd
#        path: artifacts/omd

#    - name: store outdated
#      uses: actions/upload-artifact@v2
#      with:
#        name: outdated
#        path: artifacts/outdated

#    - name: store snitch
#      uses: actions/upload-artifact@v2
#      with:
#        name: snitch
#        path: artifacts/snitch

#    - name: store resharper dupfinder
#      uses: actions/upload-artifact@v2
#      with:
#        name: dupfinder
#        path: artifacts/dupfinder
